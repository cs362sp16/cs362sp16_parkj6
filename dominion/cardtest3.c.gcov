        -:    0:Source:cardtest3.c
        -:    0:Graph:cardtest3.gcno
        -:    0:Data:cardtest3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2://Author: 		Jong Park (parkj6)
        -:    3://Filename:		cardtest3.c
        -:    4://Description: 	Tests cards
        -:    5:*/
        -:    6:
        -:    7:#include <stdio.h>
        -:    8:#include "dominion.h"
        -:    9:#include "testing.h"
        -:   10:
        1:   11:int main (int argc, char** argv) {
        -:   12:  struct gameState G;
        -:   13:
        1:   14:  int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse,
        -:   15:	       sea_hag, tribute, smithy};
        -:   16:
        1:   17:  printf ("Starting game.\n");
        -:   18:
        -:   19:  // 2 player game
        1:   20:  srand(time(NULL));
        1:   21:  int rando = ( rand()%10 );
        1:   22:  int r = initializeGame(2, k, rando, &G);
        1:   23:  if (r == 0) {
        1:   24:	printf("PASSED\n");  
        -:   25:  } else {
    #####:   26:	printf("FAILED\n");
        -:   27:  }
        -:   28:
        -:   29:  // TESTING -- int cardEffect(STEWARD, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:   30:  // STEWARD -- choice1 = 1:     +2 cards
        -:   31:  //         -- choice1 = 2:     +2 coins
        -:   32:  //         -- choice1 = 3:     trash 2 cards from hand  (given by choice2 and choice3)
        1:   33:  int p1handCount = G.handCount[0];
        1:   34:  int cE = cardEffect(steward, 1, 0, 0, &G, 0);
        -:   35:
        1:   36:  if (G.handCount[0] != (p1handCount + 2)) {
        1:   37:	printf("FAILED\n");
        -:   38:  } else {
    #####:   39:	printf("PASSED\n");
        -:   40:  }
        1:   41:  if (cE == 0) {
        1:   42:	printf("PASSED\n");  
        -:   43:  } else {
    #####:   44:	printf("FAILED\n");
        -:   45:  }
        -:   46:
        1:   47:  int numCoins = G.coins;
        1:   48:  cE = cardEffect(steward, 2, 0, 0, &G, 0);
        -:   49:
        1:   50:  if (G.coins != (numCoins + 2)) {
    #####:   51:	printf("FAILED\n");
        -:   52:  } else {
        1:   53:	printf("PASSED\n");
        -:   54:  }
        1:   55:  if (cE == 0) {
        1:   56:	printf("PASSED\n");  
        -:   57:  } else {
    #####:   58:	printf("FAILED\n");
        -:   59:  }
        -:   60:
        1:   61:  gainCard(copper, &G, 2, 1);   // gain copper to player1's hand
        1:   62:  gainCard(copper, &G, 2, 1);   // do it twice, so we can discard 2 coppers
        1:   63:  p1handCount = G.handCount[0];
        1:   64:  cE = cardEffect(steward, 3, copper, copper, &G, 0);
        -:   65:
        1:   66: if (G.handCount[0] != (p1handCount - 2)) {
        1:   67:	printf("FAILED\n");
        -:   68:  } else {
    #####:   69:	printf("PASSED\n");
        -:   70:  }
        1:   71:  if (cE == 0) {
        1:   72:	printf("PASSED\n");  
        -:   73:  } else {
    #####:   74:	printf("FAILED\n");
        -:   75:  }
        -:   76:
        1:   77:  return 0;
        -:   78:}
